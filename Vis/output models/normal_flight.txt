structure  : V {
  Distance = { 0..4 }
  FlyHeight = { 3..4 }
  GroundHeight = { 0..0 }
  Height = { 0..5 }
  Inspection = { Insp1; Insp2 }
  InspectionHeight = { 1..2 }
  Power = { 0..100 }
  PowerUsage = { 0..5 }
  RestrictedHeight = { 5..5 }
  Time = { 0..35 }
  AllPicturesTaken = { 18; 19; 20; 21; 22; 23; 24; 25; 26; 27; 28; 29; 30; 31; 32; 33; 34; 35 }
  AtCriticalPower = {  }
  AtFlyHeight = { 3; 4; 5; 6; 7; 10; 11; 12; 13; 14; 15; 16; 19; 20; 21; 22 }
  AtGroundHeight = { 0; 25; 26; 27; 28; 29; 30; 31; 32; 33; 34; 35 }
  AtHome = { 0; 1; 2; 3; 22; 23; 24; 25; 26; 27; 28; 29; 30; 31; 32; 33; 34; 35 }
  AtInspection = { 7; 8; 9; 10; 16; 17; 18; 19 }
  AtInspectionHeight = { 1; 2; 8; 9; 17; 18; 23; 24 }
  AtInspectionToDo = { 7; 8; 16; 17 }
  AtLowPower = { 18; 19; 20; 21; 22; 23; 24; 25; 26; 27; 28; 29; 30; 31; 32; 33; 34; 35 }
  AtNormalPower = { 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17 }
  AtRestrictedHeight = {  }
  AtTravelSpace = { 4; 5; 6; 11; 12; 13; 14; 15; 20; 21 }
  CN_DistanceToHome = { 3,0; 3,2; 3,3; 3,4; 4,1; 4,2; 4,3; 4,4; 5,0; 5,2; 5,3; 5,4; 10,0; 10,1; 10,2; 10,4; 11,0; 11,1; 11,3; 11,4; 12,0; 12,1; 12,2; 12,4; 13,0; 13,1; 13,3; 13,4; 14,0; 14,1; 14,2; 14,4; 19,0; 19,1; 19,3; 19,4; 20,0; 20,2; 20,3; 20,4 }
  CN_DistanceToRA = { 3,0; 3,2; 3,3; 3,4; 4,0; 4,1; 4,3; 4,4; 5,0; 5,1; 5,2; 5,4; 6,0; 6,1; 6,3; 6,4; 10,0; 10,2; 10,3; 10,4; 11,0; 11,1; 11,3; 11,4; 12,0; 12,2; 12,3; 12,4; 13,0; 13,1; 13,3; 13,4; 19,0; 19,1; 19,2; 19,4; 20,0; 20,1; 20,2; 20,3 }
  CN_DistanceToTarget = { 3,0; 3,2; 3,3; 3,4; 4,0; 4,1; 4,3; 4,4; 5,0; 5,2; 5,3; 5,4; 10,0; 10,2; 10,3; 10,4; 11,0; 11,1; 11,3; 11,4; 12,0; 12,2; 12,3; 12,4; 13,0; 13,1; 13,3; 13,4; 14,0; 14,2; 14,3; 14,4; 19,0; 19,1; 19,3; 19,4; 20,0; 20,2; 20,3; 20,4 }
  CN_Height = { 0,0; 0,2; 0,3; 0,4; 0,5; 1,0; 1,1; 1,3; 1,4; 1,5; 2,0; 2,1; 2,2; 2,4; 2,5; 7,0; 7,1; 7,3; 7,4; 7,5; 9,0; 9,1; 9,2; 9,4; 9,5; 16,0; 16,1; 16,3; 16,4; 16,5; 18,0; 18,1; 18,2; 18,4; 18,5; 22,0; 22,1; 22,3; 22,4; 22,5; 23,0; 23,2; 23,3; 23,4; 23,5; 24,1; 24,2; 24,3; 24,4; 24,5 }
  CN_Location = { 3,Home; 3,Insp1; 3,Insp2; 6,Home; 6,Insp2; 6,TravelSpace; 10,Home; 10,Insp1; 10,Insp2; 15,Home; 15,Insp1; 15,TravelSpace; 19,Home; 19,Insp1; 19,Insp2; 21,Insp1; 21,Insp2; 21,TravelSpace }
  C_DistanceToHome = { 3,1; 4,0; 5,1; 10,3; 11,2; 12,3; 13,2; 14,3; 19,2; 20,1 }
  C_DistanceToRA = { 3,1; 4,2; 5,3; 6,2; 10,1; 11,2; 12,1; 13,2; 19,3; 20,4 }
  C_DistanceToTarget = { 3,1; 4,2; 5,1; 10,1; 11,2; 12,1; 13,2; 14,1; 19,2; 20,1 }
  C_Height = { 0,1; 1,2; 2,3; 7,2; 9,3; 16,2; 18,3; 22,2; 23,1; 24,0 }
  C_Location = { 3,TravelSpace; 6,Insp1; 10,TravelSpace; 15,Insp2; 19,TravelSpace; 21,Home }
  C_Picture_Taken = { 8,Insp1; 17,Insp2 }
  CloseToRA = { 4; 11; 13 }
  NonDetDecreaseDistRA = { 3; 6; 10; 12 }
  NonDetIncreaseDistRA = { 5; 19; 20 }
  NonDetMove = { 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 11; 12; 13; 14; 15; 16; 17; 18; 19; 20; 21; 22; 23; 24; 25; 26; 27; 28; 29; 30; 31; 32; 33; 34; 35 }
  Picture_Taken = { 9,Insp1; 10,Insp1; 11,Insp1; 12,Insp1; 13,Insp1; 14,Insp1; 15,Insp1; 16,Insp1; 17,Insp1; 18,Insp1; 18,Insp2; 19,Insp1; 19,Insp2; 20,Insp1; 20,Insp2; 21,Insp1; 21,Insp2; 22,Insp1; 22,Insp2; 23,Insp1; 23,Insp2; 24,Insp1; 24,Insp2; 25,Insp1; 25,Insp2; 26,Insp1; 26,Insp2; 27,Insp1; 27,Insp2; 28,Insp1; 28,Insp2; 29,Insp1; 29,Insp2; 30,Insp1; 30,Insp2; 31,Insp1; 31,Insp2; 32,Insp1; 32,Insp2; 33,Insp1; 33,Insp2; 34,Insp1; 34,Insp2; 35,Insp1; 35,Insp2 }
  Picture_Taken_Init = {  }
  BackLoopTime = 0
  Battery = { 0->100; 1->95; 2->90; 3->85; 4->82; 5->79; 6->76; 7->73; 8->71; 9->69; 10->64; 11->61; 12->58; 13->55; 14->52; 15->49; 16->46; 17->44; 18->42; 19->37; 20->34; 21->31; 22->28; 23->26; 24->24; 25->22; 26->21; 27->20; 28->19; 29->18; 30->17; 31->16; 32->15; 33->14; 34->13; 35->12 }
  Battery_Init = 100
  ClosestInspectionLocationToDo = { 0->Insp1; 1->Insp1; 2->Insp1; 3->Insp1; 4->Insp1; 5->Insp1; 6->Insp1; 7->Insp1; 8->Insp1; 9->Insp2; 10->Insp2; 11->Insp2; 12->Insp2; 13->Insp2; 14->Insp2; 15->Insp2; 16->Insp2; 17->Insp2 }
  ClosestInspectionLocationToDo_Init = Insp1
  CriticalPower = 5
  Curr_DistanceToHome = { 0->0; 1->0; 2->0; 3->0; 4->1; 5->0; 6->1; 7->2; 8->2; 9->2; 10->2; 11->3; 12->2; 13->3; 14->2; 15->3; 16->3; 17->3; 18->3; 19->3; 20->2; 21->1; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 28->0; 29->0; 30->0; 31->0; 32->0; 33->0; 34->0; 35->0 }
  Curr_DistanceToRA = { 0->2; 1->2; 2->2; 3->2; 4->1; 5->2; 6->3; 7->2; 8->2; 9->2; 10->2; 11->1; 12->2; 13->1; 14->2; 15->2; 16->2; 17->2; 18->2; 19->2; 20->3; 21->4; 22->4; 23->4; 24->4; 25->4; 26->4; 27->4; 28->4; 29->4; 30->4; 31->4; 32->4; 33->4; 34->4; 35->4 }
  Curr_DistanceToTarget = { 0->2; 1->2; 2->2; 3->2; 4->1; 5->2; 6->1; 7->0; 8->0; 9->2; 10->2; 11->1; 12->2; 13->1; 14->2; 15->1; 16->0; 17->0; 18->3; 19->3; 20->2; 21->1; 22->0; 23->0; 24->0; 25->0; 26->0; 27->0; 28->0; 29->0; 30->0; 31->0; 32->0; 33->0; 34->0; 35->0 }
  Curr_Height = { 0->0; 1->1; 2->2; 3->3; 4->3; 5->3; 6->3; 7->3; 8->2; 9->2; 10->3; 11->3; 12->3; 13->3; 14->3; 15->3; 16->3; 17->2; 18->2; 19->3; 20->3; 21->3; 22->3; 23->2; 24->1; 25->0; 26->0; 27->0; 28->0; 29->0; 30->0; 31->0; 32->0; 33->0; 34->0; 35->0 }
  Curr_Location = { 0->Home; 1->Home; 2->Home; 3->Home; 4->TravelSpace; 5->TravelSpace; 6->TravelSpace; 7->Insp1; 8->Insp1; 9->Insp1; 10->Insp1; 11->TravelSpace; 12->TravelSpace; 13->TravelSpace; 14->TravelSpace; 15->TravelSpace; 16->Insp2; 17->Insp2; 18->Insp2; 19->Insp2; 20->TravelSpace; 21->TravelSpace; 22->Home; 23->Home; 24->Home; 25->Home; 26->Home; 27->Home; 28->Home; 29->Home; 30->Home; 31->Home; 32->Home; 33->Home; 34->Home; 35->Home }
  DetourAssumption = 3
  DistanceBetween = { Home,Home->0; Home,Insp1->2; Home,Insp2->3; Insp1,Home->2; Insp1,Insp1->0; Insp1,Insp2->2; Insp2,Home->3; Insp2,Insp1->2; Insp2,Insp2->0 }
  DistanceToHome_Init = 0
  DistanceToRA_Init = 2
  DistanceToTarget_Init = 2
  Height_Init = 0
  LiftPower = 5
  Location_Init = Home
  LowPower = { 0->30; 1->32; 2->34; 3->36; 4->39; 5->36; 6->39; 7->42; 8->40; 9->40; 10->42; 11->45; 12->42; 13->45; 14->42; 15->45; 16->45; 17->43; 18->43; 19->45; 20->42; 21->39; 22->36; 23->34; 24->32; 25->30; 26->30; 27->30; 28->30; 29->30; 30->30; 31->30; 32->30; 33->30; 34->30; 35->30 }
  LowerPower = 2
  MoveToPower = 3
  Next = { 0->1; 1->2; 2->3; 3->4; 4->5; 5->6; 6->7; 7->8; 8->9; 9->10; 10->11; 11->12; 12->13; 13->14; 14->15; 15->16; 16->17; 17->18; 18->19; 19->20; 20->21; 21->22; 22->23; 23->24; 24->25; 25->26; 26->27; 27->28; 28->29; 29->30; 30->31; 31->32; 32->33; 33->34; 34->35 }
  NoOpPower = 1
  Plan = { 0->Lift; 1->Lift; 2->Lift; 3->MoveTowardsTarget; 4->MoveAwayFromRA; 5->MoveTowardsTarget; 6->MoveTowardsTarget; 7->Lower; 8->TakePicture; 9->Lift; 10->MoveTowardsTarget; 11->MoveAwayFromRA; 12->MoveTowardsTarget; 13->MoveAwayFromRA; 14->MoveTowardsTarget; 15->MoveTowardsTarget; 16->Lower; 17->TakePicture; 18->Lift; 19->MoveTowardsTarget; 20->MoveTowardsTarget; 21->MoveTowardsTarget; 22->Lower; 23->Lower; 24->Lower; 25->NoOp; 26->NoOp; 27->NoOp; 28->NoOp; 29->NoOp; 30->NoOp; 31->NoOp; 32->NoOp; 33->NoOp; 34->NoOp; 35->NoOp }
  PowerUsageAt = { 0->5; 1->5; 2->5; 3->3; 4->3; 5->3; 6->3; 7->2; 8->2; 9->5; 10->3; 11->3; 12->3; 13->3; 14->3; 15->3; 16->2; 17->2; 18->5; 19->3; 20->3; 21->3; 22->2; 23->2; 24->2; 25->1; 26->1; 27->1; 28->1; 29->1; 30->1; 31->1; 32->1; 33->1; 34->1; 35->1 }
  Start = 0
  StaticLowPower = 25
  TakePicturePower = 2
  Target = { 0->Insp1; 1->Insp1; 2->Insp1; 3->Insp1; 4->Insp1; 5->Insp1; 6->Insp1; 7->Insp1; 8->Insp1; 9->Insp2; 10->Insp2; 11->Insp2; 12->Insp2; 13->Insp2; 14->Insp2; 15->Insp2; 16->Insp2; 17->Insp2; 18->Home; 19->Home; 20->Home; 21->Home; 22->Home; 23->Home; 24->Home; 25->Home; 26->Home; 27->Home; 28->Home; 29->Home; 30->Home; 31->Home; 32->Home; 33->Home; 34->Home; 35->Home }
  Weight = 0
}
